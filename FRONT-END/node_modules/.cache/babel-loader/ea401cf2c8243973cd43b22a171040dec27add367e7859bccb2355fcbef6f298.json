{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\OneDrive - Saint Louis University\\\\Desktop\\\\FALL-2023\\\\PSD\\\\Atom\\\\FRONT-END\\\\src\\\\components\\\\DoctorLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./css/DoctorLogin.css\";\n// Import your CSS file for styling\n// import { Link } from \"react-router-dom\";\n// import { useHistory } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport DoctorDashboard from \"./DoctorDashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorLogin = () => {\n  _s();\n  // const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [emailError, setEmailError] = useState(\"\");\n  const [userError, setUserError] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // const validateEmail = (email) => {\n  //   console.log(\"in this validate email function\");\n  //   const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  //   return regex.test(email);\n  // };\n  const validateUsername = username => {\n    console.log(\"in the validation methjod of User name\");\n    // const user=username;\n    return username;\n  };\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    // setEmailError(\"\");\n\n    // // if (!validateEmail(email)) {\n    //   setEmailError(\"Please enter a valid email address.\");\n\n    //   return;\n    // }\n    if (!validateUsername(username)) {\n      setUserError(\"\");\n      setUserError(\"Pleas eprovide the correct user name\");\n      return;\n    }\n    if (username && password) {\n      setIsLoggedIn(true);\n    }\n\n    // Create an object with the user's credentials\n    const userCredentials = {\n      // email,\n      username,\n      password\n    };\n\n    // Send a POST request to the Java backend using fetch\n    // fetch(\"http://localhost:8080/Services/Health/AuthenticateUser\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(userCredentials),\n    // })\n    //   .then((response) => {\n    //     if (response.ok) {\n    //       return response.json(); // Parse the response as JSON\n    //     } else {\n    //       throw new Error(\"Login failed\");\n    //     }\n    //   })\n    //   .then((data) => {\n    //     // Handle the successful response, e.g., store user data or token\n    //     console.log(\"Login was successful\", data);\n    //     navigate(\"/DoctorDashboard\");\n\n    //   })\n    const authenticateUser = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/Services/Health/AuthenticateUser\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(userCredentials)\n        });\n        console.log(\"the user credentials are: \", userCredentials);\n        if (!response.ok) {\n          throw new Error(\"Login failed\");\n        }\n        const data = await response.json();\n        if (data.message === \"Authentication Successful\" && data.authCheck === true) {\n          setIsLoggedIn(true);\n          navigate(\"/DoctorDashboard\", {\n            state: {\n              username\n            }\n          }); // Passing userName to UserDashboard\n        } else {\n          setIsLoggedIn(false);\n        }\n\n        // Clear form fields or perform other actions after processing the response\n        setUsername(\"\");\n        setPassword(\"\");\n      } catch (error) {\n        // Handle errors, e.g., display an error message\n        alert(\"INVALID CREDENTAILS\");\n      }\n    };\n    authenticateUser();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            // type=\"email\"\n            type: \"text\",\n            id: \"form3Example3\",\n            className: `form-control form-control-lg ${\n            // emailError ? \"is-invalid\" : \"\"\n            userError ? \"is-invalid\" : \"\"}`,\n            placeholder: \"Enter a valid user name\"\n            // value={email}\n            ,\n            value: username\n            // onChange={(e) => setEmail(e.target.value)}\n            ,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), setUserError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: userError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"form3Example4\",\n            className: \"form-control form-control-lg\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: {\n            paddingLeft: \"2.5rem\",\n            paddingRight: \"2.5rem\"\n          },\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://as1.ftcdn.net/v2/jpg/02/58/30/24/1000_F_258302473_TN25oZ5Dt9MYHPEr5vAD62cUgRBSwNAG.jpg\",\n        alt: \"Login Image\"\n        // style={{ width: \"500px\", height: \"200px\", borderRadius: \"10px\" }}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorLogin, \"pKsDOzG69duhNXY1lHFGvm+1QPQ=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorLogin;\nexport default DoctorLogin;\nvar _c;\n$RefreshReg$(_c, \"DoctorLogin\");","map":{"version":3,"names":["React","useState","useNavigate","DoctorDashboard","jsxDEV","_jsxDEV","DoctorLogin","_s","username","setUsername","password","setPassword","userError","setUserError","isLoggedIn","setIsLoggedIn","validateUsername","console","log","navigate","handleLogin","userCredentials","authenticateUser","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","message","authCheck","state","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","required","htmlFor","style","paddingLeft","paddingRight","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/priya/OneDrive - Saint Louis University/Desktop/FALL-2023/PSD/Atom/FRONT-END/src/components/DoctorLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./css/DoctorLogin.css\";\r\n// Import your CSS file for styling\r\n// import { Link } from \"react-router-dom\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DoctorDashboard from \"./DoctorDashboard\";\r\n\r\nconst DoctorLogin = () => {\r\n  // const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  // const [emailError, setEmailError] = useState(\"\");\r\n  const [userError, setUserError] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  // const validateEmail = (email) => {\r\n  //   console.log(\"in this validate email function\");\r\n  //   const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  //   return regex.test(email);\r\n  // };\r\n  const validateUsername = (username) => {\r\n    console.log(\"in the validation methjod of User name\");\r\n    // const user=username;\r\n    return username;\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    // setEmailError(\"\");\r\n\r\n    // // if (!validateEmail(email)) {\r\n    //   setEmailError(\"Please enter a valid email address.\");\r\n\r\n    //   return;\r\n    // }\r\n    if (!validateUsername(username)) {\r\n      setUserError(\"\");\r\n      setUserError(\"Pleas eprovide the correct user name\");\r\n      return;\r\n    }\r\n    if (username && password) {\r\n      setIsLoggedIn(true);\r\n    }\r\n\r\n    // Create an object with the user's credentials\r\n    const userCredentials = {\r\n      // email,\r\n      username,\r\n      password,\r\n    };\r\n\r\n    // Send a POST request to the Java backend using fetch\r\n    // fetch(\"http://localhost:8080/Services/Health/AuthenticateUser\", {\r\n    //   method: \"POST\",\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify(userCredentials),\r\n    // })\r\n    //   .then((response) => {\r\n    //     if (response.ok) {\r\n    //       return response.json(); // Parse the response as JSON\r\n    //     } else {\r\n    //       throw new Error(\"Login failed\");\r\n    //     }\r\n    //   })\r\n    //   .then((data) => {\r\n    //     // Handle the successful response, e.g., store user data or token\r\n    //     console.log(\"Login was successful\", data);\r\n    //     navigate(\"/DoctorDashboard\");\r\n\r\n    //   })\r\n    const authenticateUser = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:8080/Services/Health/AuthenticateUser\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(userCredentials),\r\n          }\r\n        );\r\n        console.log(\"the user credentials are: \", userCredentials);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Login failed\");\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.message === \"Authentication Successful\" && data.authCheck === true) {\r\n          setIsLoggedIn(true);\r\n          navigate(\"/DoctorDashboard\", { state: { username } }); // Passing userName to UserDashboard\r\n        } else {\r\n          setIsLoggedIn(false);\r\n        }\r\n\r\n        // Clear form fields or perform other actions after processing the response\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n      } catch (error) {\r\n        // Handle errors, e.g., display an error message\r\n        alert(\"INVALID CREDENTAILS\");\r\n      }\r\n    };\r\n    authenticateUser();\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-form\">\r\n        <h2>Login</h2>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <input\r\n              // type=\"email\"\r\n              type=\"text\"\r\n              id=\"form3Example3\"\r\n              className={`form-control form-control-lg ${\r\n                // emailError ? \"is-invalid\" : \"\"\r\n                userError ? \"is-invalid\" : \"\"\r\n              }`}\r\n              placeholder=\"Enter a valid user name\"\r\n              // value={email}\r\n              value={username}\r\n              // onChange={(e) => setEmail(e.target.value)}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n            <label htmlFor=\"username\">Username</label>\r\n            {setUserError && (\r\n              <div className=\"invalid-feedback\">{userError}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              id=\"form3Example4\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <label htmlFor=\"password\">Password</label>\r\n            {/* <input type=\"password\" id=\"password\" name=\"password\" /> */}\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            style={{ paddingLeft: \"2.5rem\", paddingRight: \"2.5rem\" }}\r\n            onClick={handleLogin}>\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"login-image\">\r\n        <img\r\n          src=\"https://as1.ftcdn.net/v2/jpg/02/58/30/24/1000_F_258302473_TN25oZ5Dt9MYHPEr5vAD62cUgRBSwNAG.jpg\"\r\n          alt=\"Login Image\"\r\n          // style={{ width: \"500px\", height: \"200px\", borderRadius: \"10px\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}