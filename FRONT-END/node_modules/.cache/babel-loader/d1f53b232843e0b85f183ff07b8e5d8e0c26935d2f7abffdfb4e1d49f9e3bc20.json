{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\OneDrive - Saint Louis University\\\\Desktop\\\\FALL-2023\\\\PSD\\\\Atom\\\\FRONT-END\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\n// src/components/ChatBot.js\nimport React, { useState } from \"react\";\nimport \"./ChatBot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const handleSendMessage = () => {\n    if (inputMessage.trim() === \"\") return;\n\n    // Add the user's message to the chat\n    setMessages([...messages, {\n      text: inputMessage,\n      user: \"user\"\n    }]);\n    setInputMessage(\"\");\n\n    // Simulate a response from the chatbot (you can replace this with your logic)\n    setTimeout(() => {\n      const response = \"I'm just a basic chatbot.\";\n      setMessages([...messages, {\n        text: response,\n        user: \"bot\"\n      }]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-bot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"7TMxnxVCmDjjzmLPSqUPhq69qog=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","inputMessage","setInputMessage","handleSendMessage","trim","text","user","setTimeout","response","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/priya/OneDrive - Saint Louis University/Desktop/FALL-2023/PSD/Atom/FRONT-END/src/components/ChatBot.js"],"sourcesContent":["// src/components/ChatBot.js\r\nimport React, { useState } from \"react\";\r\nimport \"./ChatBot.css\";\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n\r\n  const handleSendMessage = () => {\r\n    if (inputMessage.trim() === \"\") return;\r\n\r\n    // Add the user's message to the chat\r\n    setMessages([...messages, { text: inputMessage, user: \"user\" }]);\r\n    setInputMessage(\"\");\r\n\r\n    // Simulate a response from the chatbot (you can replace this with your logic)\r\n    setTimeout(() => {\r\n      const response = \"I'm just a basic chatbot.\";\r\n      setMessages([...messages, { text: response, user: \"bot\" }]);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-bot-container\">\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.user}`}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message...\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIF,YAAY,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;;IAEhC;IACAJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEM,IAAI,EAAEJ,YAAY;MAAEK,IAAI,EAAE;IAAO,CAAC,CAAC,CAAC;IAChEJ,eAAe,CAAC,EAAE,CAAC;;IAEnB;IACAK,UAAU,CAAC,MAAM;MACf,MAAMC,QAAQ,GAAG,2BAA2B;MAC5CR,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEM,IAAI,EAAEG,QAAQ;QAAEF,IAAI,EAAE;MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCd,OAAA;MAAKa,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BX,QAAQ,CAACY,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BjB,OAAA;QAAiBa,SAAS,EAAG,WAAUG,OAAO,CAACN,IAAK,EAAE;QAAAI,QAAA,EACnDE,OAAO,CAACP;MAAI,GADLQ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9Bd,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAEnB,YAAa;QACpBoB,QAAQ,EAAGC,CAAC,IAAKpB,eAAe,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACFrB,OAAA;QAAQ4B,OAAO,EAAErB,iBAAkB;QAAAO,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCID,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAwCb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}